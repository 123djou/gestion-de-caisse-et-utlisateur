@model gestionarretecaisse.Models.utilisateur

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Layoutop.cshtml";
}
<html>
<head>
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
    <link href="~/Content/ajoutusr.css" rel="stylesheet" />
    <link href="~/Content/sbadmin.css" rel="stylesheet" />
   
</head>
<body>
    <div class="wrapper">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <br /><br />
            <div class="form-horizontal">
                <h3 class="h3">Creer utilisateur</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Code_utilisateur", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (Session["error"].Equals("1"))
                        { <b style="color:red">code utilisateur deja exist !</b><br />}
                        @if (Session["error"].Equals("3"))
                        { <b style="color:red">erreur dans la saisir de profil !</b><br /><br />}

                        @Html.EditorFor(model => model.id_utilisateur, new { htmlAttributes = new { @class = "form-control", required = "required", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.id_utilisateur, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.prenom, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.prenom, htmlAttributes: new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pass, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.pass, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.id_profil, "id_profil", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("id_profil", null, htmlAttributes: new { @class = "form-control", @id = "prof" })
                        @Html.ValidationMessageFor(model => model.id_profil, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("niveau", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.niveau_utilisateur, new { htmlAttributes = new { @class = "form-control", required = "required", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.niveau_utilisateur, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @if (Session["error"].Equals("2"))
                    { <br /><b style="color:red">impossible d'affecter deux utilisateurs a méme caisse!</b><br />}
                    @Html.Label("num_caisse", "num_caisse", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       
                        @Html.DropDownList("id_caisse", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.id_caisse, "", new { @class = "text-danger" })
                      
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("ID_agence", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       
                        @Html.DropDownList("id_agence", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.id_caisse, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.nom, new { htmlAttributes = new { @class = "form-control", required = "required" } })

                    </div>
                </div>


                <div class="col-md-10">
                    @Html.HiddenFor(model => model.creer_par, new { htmlAttributes = new { @class = "form-control", required = "required" } })

                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <span style="visibility:hidden">ggjjg</span><input type="submit" value="enregistrer" class="bout" /><span style="visibility:hidden">ggjjg</span><button class="bout" onclick="location.href='@Url.Action("Index")';return false;">retour</button>
                    </div>
                </div>
            </div>
        }





        @{Session["error"] = "";
        }




    </div>
</body>

</html>